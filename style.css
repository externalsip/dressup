*{box-sizing: border-box;}

:root{
    --head_hue:50deg;
    --head_saturation: 50%;
    --head_brightness: 50%;
    --body_hue:50deg;
    --body_saturation: 50%;
    --body_brightness: 50%;
    --hat_hue:50deg;
    --hat_saturation: 50%;
    --hat_brightness: 50%;
    --hair_hue:50deg;
    --hair_saturation: 50%;
    --hair_brightness: 50%;
    --bangs_hue:50deg;
    --bangs_saturation: 50%;
    --bangs_brightness: 50%;
    --eyes_hue:50deg;
    --eyes_saturation: 50%;
    --eyes_brightness: 50%;
}

body{
    height: 100vh;
    display:flex;
    justify-content: space-between;
    align-items: center;
    overflow: hidden;
    background-color: rgb(105, 84, 131);
}

#canvas{
    width:400px;
    height:400px;
    background-color: purple;
    position:relative;
}

#canvas_wrapper{
    width:400px;
    height:500px;
    order:2;
}

#wrapper{
    height:100vh;
    width:600px;
    order:1;
    display:flex;
}

#menu{
    width:100%;
    height:80%;
    min-width: 500px;
    display:flex;    
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: space-evenly;
    overflow-y: scroll;
    gap: 10px;
    background-color: rgba(0, 0, 0, 0.3);
    padding: 20px 0 20px 0;

}

#category_wrapper{
    height:80%;
    display:flex;
    flex-direction: column;
    justify-content: space-between;
}

.category_label{
    width:75px;
    height:75px;
    background-color: rgb(166, 166, 166);
    display:inline;
}
.category_label:hover{
    background-color: rgb(133, 133, 133);;
}

.icon{
    width:100%;
}

.selection_icon{
    width:100%;
    height:100%;
}

.radio{
    display:none;
}

.style_button{
    background-color: rgb(134, 106, 168);
    width:225px;
    height:225px;
    background-size:contain;
    text-align: center;
}

.style_button:hover{
    background-color: rgb(104, 83, 130);
}

::-webkit-scrollbar {
    width: 10px;
  }
  
  ::-webkit-scrollbar-track {
    background: rgb(121, 98, 150);
    border:black solid 0.5px;
  }

  ::-webkit-scrollbar-thumb {
    background: rgb(134, 112, 161);
    border-radius: 10px;
  }
  
  ::-webkit-scrollbar-thumb:hover {
    background: rgb(101, 85, 120);
    border-radius:10px;
  }

  /*custom scrollbar*/

  .hair_icon{
    filter:hue-rotate(61deg) saturate(103%) brightness(108%);
}

.sprite{
    display: inline-block;
    position: absolute;
    width: 400px;
    height: 400px;
    top:50%;
    left:50%;
    transform: translate(-50%, -50%);
}

.slider {                       /* Code taken from https://www.w3schools.com/howto/howto_js_rangeslider.asp */
  width: 100%;
  height: 15px;
  border-radius: 5px;
  background: #d3d3d3;
  outline: none;
  opacity: 0.7;
  -webkit-transition: .2s;
  transition: opacity .2s;
}
  
.slider:hover {
    opacity: 1;
}
  
.slider::-webkit-slider-thumb {
  appearance: none;
  width: 25px;
  height: 25px;
  border-radius: 50%;
  background: rgb(99, 99, 99);
  cursor: pointer;
}
  
.slider::-moz-range-thumb {
  width: 25px;
  height: 25px;
  border-radius: 50%;
  background: rgb(99, 99, 99);
  cursor: pointer;
}
.sliders_container{
  width: 600px;
  height:20%;
  padding: 20px;
  border-radius: 5px;
  position: absolute;
  align-self: flex-end;
  display:flex;
  flex-direction: column;
  justify-content: space-around;
  background-color: purple;
}
#head_sprite{
  filter: hue-rotate(var(--head_hue)) saturate(var(--head_saturation)) brightness(var(--head_brightness));
}
#body_sprite{
  filter: hue-rotate(var(--body_hue)) saturate(var(--body_saturation)) brightness(var(--body_brightness));
}
#hat_sprite{
  filter: hue-rotate(var(--hat_hue)) saturate(var(--hat_saturation)) brightness(var(--hat_saturation));
}
#hair_sprite{
  filter: hue-rotate(var(--hair_hue)) saturate(var(--hair_saturation)) brightness(var(--hair_brightness));
}
#bangs_sprite{
  filter: hue-rotate(var(--bangs_hue)) saturate(var(--bangs_saturation)) brightness(var(--bangs_brightness));
}
#eyes_sprite{
  filter: hue-rotate(var(--eyes_hue)) saturate(var(--eyes_saturation)) brightness(var(--eyes_brightness));
}
#mouth_sprite{
  filter: hue-rotate(var(--mouth_hue)) saturate(var(--mouth_saturation)) brightness(var(--mouth_brightness));
}